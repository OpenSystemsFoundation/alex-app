<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Bug_Email</name>
        <label>Send Bug Email</label>
        <locationX>50</locationX>
        <locationY>458</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>RecipientEmails</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <elementReference>$User.Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>BugReportSubject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>Bug_Report</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <offset>0</offset>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Feedback_Email</name>
        <label>Send Feedback Email</label>
        <locationX>578</locationX>
        <locationY>458</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>RecipientEmails</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <elementReference>$User.Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>FeedbackReportSubject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>Feedback_Report</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <offset>0</offset>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Idea_Email</name>
        <label>Send Idea Email</label>
        <locationX>314</locationX>
        <locationY>458</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>RecipientEmails</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <elementReference>$User.Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <elementReference>IdeaReportSubject</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>Idea_Report</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <offset>0</offset>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>62.0</apiVersion>
    <assignments>
        <name>Set_Recipient_to_Open_Systems_Foundation</name>
        <label>Set Recipient to Open Systems Foundation</label>
        <locationX>446</locationX>
        <locationY>242</locationY>
        <assignmentItems>
            <assignToReference>RecipientEmails</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>support@opensf.foundation</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Feedback_Type_Choice</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>Bug</name>
        <choiceText>Bug</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Bug</stringValue>
        </value>
    </choices>
    <choices>
        <name>Feedback</name>
        <choiceText>Feedback</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Feedback</stringValue>
        </value>
    </choices>
    <choices>
        <name>Idea</name>
        <choiceText>Idea</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Idea</stringValue>
        </value>
    </choices>
    <constants>
        <name>ButtonLinkURL</name>
        <dataType>String</dataType>
        <value>
            <stringValue>https://buymeacoffee.com/jeffkr</stringValue>
        </value>
    </constants>
    <decisions>
        <name>Feedback_Type_Choice</name>
        <label>Feedback Type</label>
        <locationX>446</locationX>
        <locationY>350</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>BugChoice</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Feedback_Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Bug</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Bug_Email</targetReference>
            </connector>
            <label>Bug</label>
        </rules>
        <rules>
            <name>IdeaChoice</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Feedback_Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Idea</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Idea_Email</targetReference>
            </connector>
            <label>Idea</label>
        </rules>
        <rules>
            <name>FeedbackChoice</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Feedback_Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Feedback</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Feedback_Email</targetReference>
            </connector>
            <label>Feedback</label>
        </rules>
    </decisions>
    <description>A flow for sending feedback, ideas and bugs to the developer through email.</description>
    <environments>Default</environments>
    <interviewLabel>Feedback Reporting {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Feedback Reporting</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <screens>
        <name>Feedback_Screen</name>
        <label>Feedback Screen</label>
        <locationX>446</locationX>
        <locationY>134</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Set_Recipient_to_Open_Systems_Foundation</targetReference>
        </connector>
        <fields>
            <name>Feedback_Screen_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>Feedback_Screen_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>FeedbackTitle</name>
                    <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;💡 &lt;/span&gt;&lt;strong style=&quot;font-size: 16px;&quot;&gt;Share Your Thoughts!&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;We’re here to listen&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>Feedback_Screen_Section1_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>Button</name>
                    <fieldText>&lt;p style=&quot;text-align: right;&quot;&gt;{!LinkButton}&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <fields>
            <name>FeedbackHeader</name>
            <fieldText>&lt;ul&gt;&lt;li&gt;🛠️ &lt;strong&gt;Report a Bug&lt;/strong&gt;: Help us squash those pesky issues&lt;/li&gt;&lt;li&gt;💡 &lt;strong&gt;Suggest an Idea&lt;/strong&gt;: Share your brilliant insights&lt;/li&gt;&lt;li&gt;✨ &lt;strong&gt;Provide Feedback&lt;/strong&gt;: Let us know what’s working (or not)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;We will get back to you as soon as possible. Your input makes all the difference! 🏆&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;You can always reach out to us at &lt;strong&gt;support@opensf.foundation&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Feedback_Type</name>
            <choiceReferences>Bug</choiceReferences>
            <choiceReferences>Idea</choiceReferences>
            <choiceReferences>Feedback</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Feedback Type</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>BugTemplate</name>
            <fieldText>&lt;p&gt;{!BugReportTemplate}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Feedback_Type</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>Bug</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Bug_Report</name>
            <fieldText>Bug Report</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Feedback_Type</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>Bug</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>IdeaTemplate</name>
            <fieldText>&lt;p&gt;{!IdeaReportTemplate}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Feedback_Type</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>Idea</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Idea_Report</name>
            <fieldText>Idea Report</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Feedback_Type</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>Idea</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>FeedbackTemplate</name>
            <fieldText>&lt;p&gt;{!FeedbackReportTemplate}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Feedback_Type</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>Feedback</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Feedback_Report</name>
            <fieldText>Feedback Report</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Feedback_Type</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>Feedback</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <nextOrFinishButtonLabel>Send</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>320</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Feedback_Screen</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>BugReportSubject</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!$User.FirstName} {!$User.LastName} created a Bug Report | {!$User.Email}</text>
    </textTemplates>
    <textTemplates>
        <name>BugReportTemplate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;h3&gt;🐞 &lt;strong&gt;Bug Report Template&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;What’s the issue? &lt;/strong&gt;&lt;em&gt;(Briefly describe the bug you encountered)&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Steps to reproduce: &lt;/strong&gt;&lt;em&gt;(List the actions that led to the issue)&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;What did you expect to happen? &lt;/strong&gt;&lt;em&gt;(Describe the expected behavior)&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;What actually happened? &lt;/strong&gt;&lt;em&gt;(Explain what occurred instead)&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>FeedbackReportSubject</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!$User.FirstName} {!$User.LastName} provided some Feedback! | {!$User.Email}</text>
    </textTemplates>
    <textTemplates>
        <name>FeedbackReportTemplate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;h3&gt;💬 &lt;strong&gt;Feedback Template&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;What’s your feedback about? &lt;/strong&gt;&lt;em&gt;(Briefly describe the feature, experience, or issue)&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;What did you like or dislike? &lt;/strong&gt;&lt;em&gt;(Highlight what worked well or what needs improvement)&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>IdeaReportSubject</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!$User.FirstName} {!$User.LastName} sent a new Idea |  {!$User.Email}</text>
    </textTemplates>
    <textTemplates>
        <name>IdeaReportTemplate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;h3&gt;💡 &lt;strong&gt;Idea Suggestion Template&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Title:&lt;/strong&gt; &lt;em&gt;(Give your idea a short, descriptive title)&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;What’s the idea? &lt;/strong&gt;&lt;em&gt;(Briefly describe your idea in 1-2 sentences)&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Why is it valuable? &lt;/strong&gt;&lt;em&gt;(Explain the benefit or problem it solves)&lt;/em&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>LinkButton</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>&lt;a class=&quot;slds-button slds-button_brand&quot; href=&quot;{!ButtonLinkURL}&quot; target=&quot;_blank&quot;&gt;Buy Us A Coffee&lt;/a&gt;</text>
    </textTemplates>
    <variables>
        <name>RecipientEmails</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
